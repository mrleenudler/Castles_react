
__________________________________________________
IMPLEMENTERES NÅ

-> Delete-room button
	=> sjekk at metoden fungerer som forventet.
	X Må ikke kunne slette Starting-room.
	X Total score må oppdateres (oppdateres ved neste rom)
	X Delete room må være toggle, og vise visuelt om den er trykket eller ikke.
		-> CSS for å vise om DeleteRoom button er active eller ikke.
	X Enable all room-buttons & 
	X disable starting room
	X modify roomsarray + scoresArray



	X Total score er for høy (har lagt til downstairsFood-Food-Food)
	=> Skal jeg bruke 'players' eller 'prevPlayers' i deleteRoom?

	X BEWARE vil clickedRoomIndex være oppdatert før rommet slettes(NEI)? Må jeg legge til en ekstra confirm?
		-> Riktig rom slettes. Andre concerns?
	X BEWARE clickedPlayerIndex må være riktig spiller, og eventuelt settes tilbake etter at rommet er fjernet
		-> Bruk en annen variabel
		-> Riktig rom slettes. Andre concerns?
	-> Potensiell bonus: Kan jeg bruke toSpliced til å forenkle koden for setPlayers throughout?
	X Hvis rommet som fjernes er siste rom for activePlayer, skal Add Room button reaktiveres

-> category change bør repopulate Size --> bonuses.
-> Rot med activity maluses (hva da?) <-> handleCategoryChange/handleRoomSizeChange - kan sette availableBonuses til "Bonus" i CategoryChange
-> Bør variabler i større grad sendes til funksjonene for å sikre at de er oppdaterte? Hvordan fungerer det med tenke på state-variables?
-> Ta høyde for at Starting player skifter -> sett focus på category for neste spiller
-> BUG: Av og til legges det til for mange bonser i dropdown. Muligens når category endres.
	-> CategoryChange bør resette availableBonuses
-> UpdateTotalScore: Kanskje den bare skal kalles når Modal lukkes?
	-> Nå: Kalles ved addRoom og calculateDownstairsBonus.
	-> Kontroller at addScore ikke legger til bonuser to ganger.
-> downstairsCorridorBonus disabler addRoom dersom rom ikke er lagt til først
	-> Gjelder det corridorBonus også?
	-> Kontroller at setSelectedCorridorBonus ikke lager sync-isuses i addRoom. -> Eventuelt flytt den(til hvor?).
-> Nytt valg av 'category' må resette size og bonus
-> Focus på 'Confirm' når bonus er valgt.
-> "Room bonus" må også fjernes (i tillegg til +/- knappene) når bonus ikke er tilgjengelig
-> Downstairs rom med bare 1 exit skal ikke ha cancel-button
-> Utility-rom må ha bonus popup
-> Warning for downstairsBonus viser ikke bonus-bilde. Det trenger ikke corridorBonus å gjøre heller.
*downstairs har confirm+Lock	-> 'Cancel' button mangler sammen med 'Lock' ('Change choice' button vises nåt det kan velges bonus)
downstairs: displayes WARNING riktig?
-> downstairsBonus: corridor legges ikke til roomsArray
-> Må implementeres en 'Cancel' button etter 'Confirm' for downstairsBonus (Mulig flere rom vil ha 'cancel' også)
-> CorridorBonus er dobbelt implementert -> useEffect activeRoom tar over rollen til koden i addRoom
-> Corridor bonus modalOKbutton trenger litt mer luft til pluss/minus knappene
-> Modal trenger korrekt bilde for Stairs og Hallway (ImageSize(?) funker ikke)
-> WARNING displayes etter at corridor-bonus er lagt til. Den skal ikke displayes for (completionBonus)
	-> Corridor bonus kan brukes flere ganger med openExits trikset.
	-> Kanskje selectedCorridorBonus må være en player.variable?
-> Displayes en unwanted '0' i CorridorBonus modal
-> room.completionBonus settes ikke til 'true'
-> Downstairs bonus har en ekstra 'Lock' dialogoue, det har ikke Corridor bonus
-> Corridor bonus må ikke kunne trigges uten å legge til rom først. (player.roomAdded må ikke settes i handleCorridorBonus)
-> Ny stateVariable: corridorBonusLocked?
-> Remove table headers

-> chosenCorridorBonus, resettes den om bonus ikke Lockes?

-> corridorBonusesUsed,    Skal den resettes ved endTurn?)
image til modalen bugger på størrelse? (Eller bare for 'stairs'?)

WARNING skal bare displaye if(!corridorBonusUsed)

===> UI i relasjon til corridorBonusLocked
	-> Disable openExits (done for .completionBonus)
	-> .completionBonus styrer modalOKbutton

DONE: !corridorBonusUsed && !completionBonus -> Lock / cancel
TODO: !corridorBonusUsed && completionBonus -> Bonus brukt tidligere -> Display chosen bonus, OK-button only
	Selected bonus: {room.chosenCorridorBonus}<br /> // Må være room.variable

DONE: corridorBonusUsed && !completionBonus -> Yes / No

TODO? corridorBonusUsed && completionBonus -> display bonus
	-> eventuelt if(chosenCorridorBonus) // Kan displayes uavhengig av kombinasjon

=> handle trigges av: 
			<button> Lock bonus / Cancel
			<button> Undo (?)

-> ModalOKbutton are enabled when prompting for Lock
	-> Disable this
	-> adjustopenExits setter disableModalOKbutton(false) -> Kalles den oftere enn forventet??
		-> disableModalOKbutton skal være 'true' i corridor Lock screen (corridorBonusUsed && )
	-> activateRoomBonus -> disabled for category && !completionBonus (openExits == 0 kaller activateRoomBonus)
	=> Konklusjon: completionBonus setter !disabled
		activateRoomBonus kjører for openExits == 0 -> setter !disable (hvordan påvirker den Downstairs?)
	=> Kanskje corridor-confirm ikke skal sette completionBonus? 


-> room-dropdowns resettes ikke etter corridorBonus+endTurn (ny bonus legges til eksisterende(?))
	-> Fikk doble bonuser for activity-350 (et resultat av corridor-bonus?)(feil bonus kna ikke velges.) (curious: kan ikke velge bonus med piltastene)
-> Corridor bonus, dersom valgt(og ikke 'Locked'), overstyrer activeRoom i addRoom for NESTE PLAYER (corridorBonus: 'Locked' ser ikke ut til å påvirke neste spiller)
-> Dersom corridorBonus er 'confirmed' kan den ikke 'Lockes' senere. -> Må løses.
-> Cannot read property og undefined reading 'category' (solved?)
	-> problem i endTurn
-> Mulig fix: sjekke for corridorer med openExits==0&&corridorbonusUsed&&!corridorbonusLocked
Problem: modalOKbutton er ikke disabled etter 'confirm' -> 
??? Er denne i det hele tatt verd å løse ???
=>
=>
=>	Vurder å restrukturere handleCorridorBonus til å ikke sette .completionBonus før 'Lock'
=>	Kanskje egen 'Lock' seksjon?
=> 	Trenger den (enda en) ekstra stateVariable?
=>
=>
corridorBonusUsed && players[clickedPlayerIndex].roomsArray[clickedRoomIndex].completionBonus && players[clickedPlayerIndex].roomsArray[clickedRoomIndex].category === "Corridor"
-> kan legges til activateRoomBonus() !!! Må ikke låse modalOK til senere

corridorBonusLocked property er kanskje løsningen.
Sjekk også ut downstairs 
	completionBonus
	chosenDownstairsBonus









-> handleCorridorRoomBonus(complete) 	-> setplayers(roomAdded: !complete, roomsArray.completionBonus: complete)
					-> setCorridorBonusUsed(true)

-> radio-buttons koblet til: name="chosen_bonus" (endre name?)
					-> onChange: setSelectedCorridorBonus

-> Lock bonus -> Display bonus -> focus OK-button.

-> Adjacent room bonus == 0 --> remove bonus buttons

L.712
{(!corridorBonusesUsed || (players[clickedPlayerIndex].roomsArray[clickedRoomIndex].completionBonus && corridorBonusesUsed === 1)) && <div>
	-> Displayer Receive..., WARNING..., <button> Lock bonus </button>
	-> Dersom clickedRooom.completionBonus && corridorBonusUsed
	-> Hvorfor? For å kunne 'undo' corridorBonus? Prøver å fjerne denne delen av betingelsen.

L.735          
{((corridorBonusesUsed === 1 && !players[clickedPlayerIndex].roomsArray[clickedRoomIndex].completionBonus) || corridorBonusesUsed > 1) &&<div>
	-> Endrer til corridorBonusUsed && !completionBonus
	-> "Close exit anyway"?
		-> 'ok' / 'cancel'
		-> openExits '+' button disables (?)
		-> set completionBonus (no undo?) Har ingen måte å skille mellom corridorRooms som er lukket med eller uten bonus.

-> 'Confirm' button fjernes.

-> Corridor bonus radio button må disables dersom det er tomt for aktuelt rom (deafult rom "N/A")






-> DownstairsBonus: Displayes 'Change choice' knappen på noe tidspunkt? 
-> DownstairsBonus: Disables openExits '+' knappen?

-> corridor-bonus bør ha en funksjon tilsvarende handleDownstairsCompletionBonusText
-> Alle rom som har completionBonus, bør de disable openExits? -> Nei
	-> Activity room bonus kan enkelt reverseres. 
		-> openExits for Activity room kan ikke manipuleres etter Confirm
		-> Activity room logikken er utmerket!! <3
	-> Living room bonus kan reverseres. Funker bra <3
	-> Sleep og Outdoor room bonus går utenom koden
FIX	-> Utility er auto-closed -> Vil ha bonus pop-up on play
	-> Food room, assumes player integrity?
		Kan trigge ny tur når som helst ved å manipulere openExits
		-> openExits må låses for Food-rooms
FIX		-> Eller Undo-button låses ved endTurn
		-> completionBonus låses ved addRoom? Krever ekstra stateVariable? Ekstra foodRoom variable?
	-> Downstairs rooms: bonus er locked, og exits kan ikke endres
		-> Fungerer bra! <3
	-> Corridor rooms: bonus er locked, men exits kan endres?

-> clickedPlayerIndex = useState(0)?
-> clickedPlayerIndex --> activePlayerIndex (rename)

-> Slett ett room fra Modal

-> 'Undo' bonus bør sette openExits = 1

-> focus på start game er annoying, og må fjernes
-> Modal viser ikke bilde for Stairs (hva med Hallways?)(rotate 90?)


-> Stairs og corridors må finnes i riktig antall (aktuelt med en counter?)
	-> Pass på at Stairs og Hallways er unike, ellers virker ikke clickedRoomIndex.
	-> Kanskje implementere en [--] knapp for hallways (Hallways openExits = 1)
	-> Undersøk at corridor-bonus bare virket én gang pr turn

-> useEffect for setActiveRoom kan lytte til 'player.availableBonuses' (tror ikke det funker)
	-> Se om denne kan effektiviseres med kall fra handleSizeChange og handleBonusChange

-> Prøv å sette focus på activePlayer.category
-> Test at alle rommene dislplayer korrekt ved å loope gjennom dem
	-> Rett opp i "id" (de er ikke i rekkefølge eller unike)(eller slett egenskapen)
-> Vurder om rommene skal stå vertikalt

-> Endre navnet på Modal til handleRoomModal eller noe slikt.
"What is semantic html?"

-> html placeholder="someString"
-> Legg til bedre bilder for bonuser
-> setClickedRoom(player.roomsArray.indexOf()) feiler hvis det er flere ulike rooms i arrayet
	->Fix: Kun unike rooms kan legges til (hører til dropdown-improvement)
	-> (Alternativ fix: endre algoritmen for å finne riktig rom; er det i det hele tatt mulig?)
-> "play_castles.jsx:971 Warning: Each child in a list should have a unique "key" prop."

react-dom.development.js:86 Warning: Encountered two children with the same key, `Corridor`. 
	-> Kommer av lik bonus.
	-> Kan bli unsupported i en senere versjon.

-> Bør Modal ikke lukkes i CorridorBonus? Bedre å highlighte 'OK'
-> chosenCorridorBonus har en placegolder value i castles_rooms
-> clickedPlayerIndex bør være en activePlayerIndex (Allerede implementert(?), trenger en rename.)
-> setActivePlayer har ikke konsekvent functional updates.
-> activePlayer kan erstattes av players[clickedPlayerIndex]
-> Undersøk at det er greit å bruke state variables til så mye, og at de ikke bør være player-instance variables, eller om de kanskje er/skulle være begge deler.
-> Erstatt activePlayer med clikcedPlayerIndex
-> UpdateTotalScore, skal summere roomsArray. (se f.eks downstairs-bonus i addRoom)
________________________________________________________________________________________________
IMPLEMENTERES SENERE

-> Fjern behovet for å sette en dummy player -> (prøv å sette players && i rendering components, spør GPT om best practice)
-> Har jeg for mange re-renders(room-buttons)? For mange state-variables som trigger re-render?
-> (Undo turn) / Delete room
-> Hva er relasjonen mellom clickedRoom og clickedRoomIndex? Er de redundante?
-> MenuStyles.css - brukes den til noe?
-> useEffect active room -> skriv om for å rette opp i demenencies, og få addRoom ut av useEffect.
-> I addRoom, activeRoom er mer eller mindre provisorisk erstattet med tempRoom. Sjekk om activeRoom trenger å være en stateVariable, og sett logikken for bruk av acteiveRoom/tempRoom/selectedCorridorBonus øverst i metoden.
-> Downstairs rooms med bare én exit må trigge bonus/Modal automatisk
-> Stylingen i corridorBonus "already received" funker ikke.
-> Setup: Player 3 / 4 kan disables frem til player 1 og 2 er utfyllt, for å lette tab-navigation til 'Start'
-> Flytte og dele opp logikken for corridorBonusModal
-> players[clickedPlayerIndex].roomsArray[clickedRoomIndex] brukes mye og kan kanskje erstattes med en shortcut.
-> Revisit setActivePlayer i handleCategoryChange
-> Dobbeltsjekk at starting-rooms fjernes fra castleRooms
-> max adjacent room bonuses == number of closed exits
-> max adjacent room bonuses == number of bonus-rewarding rooms in play
-> Hallways og Stairs må finnes i begrenset antall (Enten counter eller i castleRooms)
-> Checkbox and dropdown for roomName
-> Hallways er size 149. Må tas hensyn til ved beregning av areal for corridors.
=> scoresArray må henge visuelt sammen med roomsArray
-> Alerts kan trigges av Modal-OK-knappen (eller av +/- knappene) (alert for increased openExits & decreased bonuses)
-> Se gjennom bruke av useEffect for performance reasons.
-> Modal OK-button er false for "Downstairs" room med bare 1 exit -> får ikke lukket modalen.
	-> Ingen retrett mulighet -> Dårlig UX
	-> Bonus trigges når rommet klikkes på.
-> Sjekk om Useeffect for 'esc' key trenger onClose listener
-> poengene i scoresArray kan plasseres oppå rommene i roomsArray (Bedre for mobil)
-> setActivePlayer bruker ikke prevPlayers
-> Kan playerBackgroundColor settes et annet sted? Krever flere tabeller for å unngå oppstykking(tror jeg)
-> Integreres med Flask for å lagre spill og samle statistikk (your_games/average_game/best_player)
-> Focus på 'Category' for enkel manipulering med keyboard (kan tab-rekkefølge også settes?)
-> revisit livingRoomBonus: Er 'disable' satisfactory?
-> Lage en usedRooms array som hindrer at et unikt rom legges flere ganger. (Kontroller at det funker for corridor rooms)
-> Implementere roomTypeEmpty
------> Jobber med functional updates (Ferdig med setPlayers, sjekk setActivePlayer)
Skaler bildene med logikk -> Sjekk skalering og juster etter behov
-> Bildene kan skaleres etter total bredde på skjermen? Og reduseres med antall rom? Snu lange rom?
-> Kanskje jeg skal lage en <table> pr spiller?
-> Undersøk om setActivePlayers kan forenkles
-> Indekser er inkludert i diverse funksjoner, de trengs kanskje ikke skrives eksplisitt.
-> Må kunne velge pass(EndTurn) (ta penger og ikke velge rom -> Bør gi en advarsel-popup)
-> activateRoomBonus-Downstairs har en dobbel <div> - undersøk
-> Undo funksjonalitet for addRoom og endTurn
-> Knapper(Add room) og dropdowns til ikke-aktive spillere, blir de både disablet og usynlige? Unødvendig mye kode?
-> 'End turn' kan sette fokus på 'Category'
-> Undersøk isOpen vs isModalOpen
-> handleChangeCategory -> useEffect[activePlayer] -> useEffect[activeRoom]
=> Implementer functional updates: setVariable(prevVariable => newVariable)
-> Legg til kode for unike spillere i players_form.html -> Kan bruke farger; Implementer endring fra (active)player.name til (active)player.color
-> Modal content må ikke være transparent -> Og heller ikke skjule scoresArray (?) -> Eventuelt displaye scoresArray[index] i modal
-> handleSubmit er sannsynligvis redundant
=> Separation of concerns: Prøv å skille ut ulike elementer fra koden, 
==>spesielt koden i Modal kan gå inn i hoveddelen, eller kanskje en egen blokk?
=> Rommene strekker seg horisontalt ut av skjermen. Ønsker jeg å scrolle horisontalt eller vertikalt? (vertikalt impliserer 2 linjer med roomsArray+scoresArray)
=> Roter rommene og reduser avstanden mellom dem
-> Vil at room-bonus ikke flytter resten av modalen.
-> Disable buttons for roomsArray før rom er lagt til (For å ikke føkke opp med Food room bonusen, reimplementeres senere av test-hensyn)
-> <button 
-> I game setup, vil jeg force update av player name, når name velges med arrow-down, slik at den ikke deselected med tab.
	-> Lag noe cookie handling eller noe som husker tildligere player names. 
                          disabled={player.name !== activePlayer.name || !player.roomAdded} // Legges til for å kreve nytt rom før bonuser.
-> play_castles.jsx:618 Warning: Cannot update a component (`PlayCastles`) while rendering a different component (`Modal`). [Fordi Modal ligger i en portal??]
-> Vertikal i stedet for horisontal layout?

Vil at score lagrer alle rundene til senere
-> openExits counter i bildene for rom; green checkmark for 0 open exits
-> Bedre alt= tekster for alle elemneter
-> Rett ut lange linjer for bedre lesbarhet
-> Er activePlayer relevant lengre? kan jeg heller bruke players[clickedPlayerIndex].roomsArray[clickedRoomIndex].* ? (Tror den er viktig før rom klikkes.)
-> what is the custom for snake case and camel case in react

toast slide-out er ikke implementert. mer jobb enn forventet. Vurder å fikse senere. 
Toasten kan plasseres i en reactDOM.portal -> implementeres senere


-> Skille mellom ellers like rom(?) -> Checkbox for room-name
F5/reload må ikke slette gamet.
Legg til bonus i json -> Eventuelt fjerne availableBonuses (kontroller for identiske rom)
"Category" og "Bonus" skal være unselectable (hvor viktig er det?) (bruk html-tag 'placeholder')

Flytt all CSS-koden over i egen fil.
Spør etter ytterlige forbedringer, spesielt elementer som avverger potesielt dårlig formatering (eks overflow: auto) Også: fjern unødvendig formatering (best å ikke introdusere den?)
________________________________________________________________________________________
KJEKT Å HA
-> Undo Turn: Alle endringer i players lagres ved endTurn, så de kan reverseres
-> Alle player.name testene kan erstattes med playerIndex
-> Sett scroll-position tilsvarende activeplayer for å unngå å måtte scrolle ned for player 4.
-> Vurder layout for roomsArray/scoresArray. Kanskje scores skal displayes over rooms? Implikasjoner for potensiell mobil-app.
-> Rydd opp i Toast-logikken
-> Fjern knapper for rom når !activeplayer
-> Outdoor-250-Utility er skeiv.
-> Antall downstairs bonuser kan displayes, men ikke justeres.
-> Se gjennom Z-indekser og gjør bevisste valg.
-> Sjekk at det er ; over alt der det skal være
-> Se gjennom logikken til activePlayer
=> Trenger jeg en egen turnScore useEffect? [currentRoom, roomBonuses, completionBonuses]
=> Vurder om activePlayer er redundant med functional updates (tror den er nødvendig)
-> Har jeg to indexer for activePlayer nå?
Også, når jeg saver, før jeg reloader, printes rommene to ganger(samsvarer med console) 
	-> Sannsynligvis en artifact av test-rom metoden..
	-> Mye kode kjøres dobbelt (vises i console.log statements)
===> Kan jeg bruke type="number" for exits? (Tror det blir vanskelig med alert da.)
-> Oversikt over rom som ikke er spilt?
-> Mye av koden kjøres to ganger ved oppstart. Hvorfor det?
-> Warning pga playCastles oppdateres mens Modal er åpen. Fiks: Move state updated to event handlers
	Ensure that all state updates resulting from interactions within the Modal are triggered by user actions (like button clicks) rather than as a direct consequence of rendering.
	Review Conditional Rendering: If rendering of elements within Modal is conditionally based on state from PlayCastles, ensure this does not directly cause state updates. Any rendering logic that leads to state changes should be re-evaluated for potential side effects.
-> Se gjennom useEffect, kan noen fjernes?
-> Reflekter over om completionBonus funksjonene kan samles i én
-> Implementer Git
-> Use React Developer Tools' Profiler to monitor your application's performance. 
-> Revisit 'key' properties
-> Skriv bedre kommentarer til koden
-> Siden re-rendres mange ganger pga oppdatering av flere state variables. Er det uproblematisk, eller uønsket?

-> Statistikk over soverom-bonusen: Når et soverom er fullført, hvor mange tomt-room-deck-poeng får spilleren? Hvert antall soverom må få sitt eget gjennomsnitt.
-> Modifisere manifest.json
-> Romkategorier som er helt tomme, kan fjernes. availebleCategories stateVariable?




-> For å dele opp castles-bildene
OpenCV and Python: For a more DIY approach, 
you could use a computer vision library like OpenCV 
in conjunction with Python to detect and segment the individual pieces. 
This would require some programming knowledge to implement.


__________________________________________________________________________
USEFUL INFO
-> Lær mer om innholdet i Modal
Bruke useEffect for å lytte til endringer
->Enten [players] eller [bonuses(ny state variable)]
->Kan jeg lytte til en bestemt player også? 
	Kan lage en state variable playerName som jeg også lytter til.
	Får jeg sync issues hvis jeg skal oppdatere både playerName og player.selectedRoomSize i samme funksjon?
	-> Tenker det skal gå bra, det betyr bare at useEffect kjøres to ganger, men ikke at de er avhengige av hverandre.
->kan jeg oppdatere alle player.availableBonuses i useEffect? Kanskje det er lettest og best?
*Viktig at bonuses oppdateres før setPlayers()
	-> Trenger bonuses som state variable
*Kan jeg ta inn en variabel playerName i useEffect?
	-> Må i tilfelle sette den som en state varaiable som jeg lytter til.
**Det er mer å lære om hvordan setVariable funker

** Lær mer om useEffect og async coding i JS.

"Prettier" kan hjelpe med formatering av koden.

